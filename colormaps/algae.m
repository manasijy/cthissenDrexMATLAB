function map = algae(m)
%algae color map
%   algae(M) returns an M-by-3 matrix containing a colormap with 'algae'
%   colors.
%   algae, by itself, is the same length as the current colormap.
%
%   For example, to reset the colormap of the current figure:
%
%             colormap(coolwarm)
%
% This colormap is a diverging-qualitative colormap that scales from blue to green to yellow to red
% http://soliton.vm.bytemark.co.uk/pub/cpt-city/    
% The code structure follows coolwarm.m by Mark Brandon (Yale).

% Christopher Thissen
% Yale University
% Time-stamp: <Mar 25, 2015>

%% Check inputs
narginchk(0,1);

if nargin == 1
    validateattributes(m,{'numeric'},{'numel',1});
end

%% Begin Function

if nargin < 1, m = size(get(gcf,'colormap'),1); end
c = ...
[  80.0000         0   80.0000
   78.4314         0   82.7451
   76.8627         0   85.4902
   75.2941         0   88.2353
   73.7255         0   90.9804
   72.1569         0   93.7255
   70.5882         0   96.4706
   69.0196         0   99.2157
   67.4510         0  101.9608
   65.8824         0  104.7059
   64.3137         0  107.4510
   62.7451         0  110.1961
   61.1765         0  112.9412
   59.6078         0  115.6863
   58.0392         0  118.4314
   56.4706         0  121.1765
   54.9020         0  123.9216
   53.3333         0  126.6667
   51.7647         0  129.4118
   50.1961         0  132.1569
   48.6275         0  134.9020
   47.0588         0  137.6471
   45.4902         0  140.3922
   43.9216         0  143.1373
   42.3529         0  145.8824
   40.7843         0  148.6275
   39.2157         0  151.3725
   37.6471         0  154.1176
   36.0784         0  156.8627
   34.5098         0  159.6078
   32.9412         0  162.3529
   31.3725         0  165.0980
   29.8039         0  167.8431
   28.2353         0  170.5882
   26.6667         0  173.3333
   25.0980         0  176.0784
   23.5294         0  178.8235
   21.9608         0  181.5686
   20.3922         0  184.3137
   18.8235         0  187.0588
   17.2549         0  189.8039
   15.6863         0  192.5490
   14.1176         0  195.2941
   12.5490         0  198.0392
   10.9804         0  200.7843
    9.4118         0  203.5294
    7.8431         0  206.2745
    6.2745         0  209.0196
    4.7059         0  211.7647
    3.1373         0  214.5098
    1.5686         0  217.2549
         0         0  220.0000
         0    2.5490  215.6863
         0    5.0980  211.3725
         0    7.6471  207.0588
         0   10.1961  202.7451
         0   12.7451  198.4314
         0   15.2941  194.1176
         0   17.8431  189.8039
         0   20.3922  185.4902
         0   22.9412  181.1765
         0   25.4902  176.8627
         0   28.0392  172.5490
         0   30.5882  168.2353
         0   33.1373  163.9216
         0   35.6863  159.6078
         0   38.2353  155.2941
         0   40.7843  150.9804
         0   43.3333  146.6667
         0   45.8824  142.3529
         0   48.4314  138.0392
         0   50.9804  133.7255
         0   53.5294  129.4118
         0   56.0784  125.0980
         0   58.6275  120.7843
         0   61.1765  116.4706
         0   63.7255  112.1569
         0   66.2745  107.8431
         0   68.8235  103.5294
         0   71.3725   99.2157
         0   73.9216   94.9020
         0   76.4706   90.5882
         0   79.0196   86.2745
         0   81.5686   81.9608
         0   84.1176   77.6471
         0   86.6667   73.3333
         0   89.2157   69.0196
         0   91.7647   64.7059
         0   94.3137   60.3922
         0   96.8627   56.0784
         0   99.4118   51.7647
         0  101.9608   47.4510
         0  104.5098   43.1373
         0  107.0588   38.8235
         0  109.6078   34.5098
         0  112.1569   30.1961
         0  114.7059   25.8824
         0  117.2549   21.5686
         0  119.8039   17.2549
         0  122.3529   12.9412
         0  124.9020    8.6275
         0  127.4510    4.3137
         0  130.0000         0
    5.0196  132.4706    0.3922
   10.0392  134.9412    0.7843
   15.0588  137.4118    1.1765
   20.0784  139.8824    1.5686
   25.0980  142.3529    1.9608
   30.1176  144.8235    2.3529
   35.1373  147.2941    2.7451
   40.1569  149.7647    3.1373
   45.1765  152.2353    3.5294
   50.1961  154.7059    3.9216
   55.2157  157.1765    4.3137
   60.2353  159.6471    4.7059
   65.2549  162.1176    5.0980
   70.2745  164.5882    5.4902
   75.2941  167.0588    5.8824
   80.3137  169.5294    6.2745
   85.3333  172.0000    6.6667
   90.3529  174.4706    7.0588
   95.3725  176.9412    7.4510
  100.3922  179.4118    7.8431
  105.4118  181.8824    8.2353
  110.4314  184.3529    8.6275
  115.4510  186.8235    9.0196
  120.4706  189.2941    9.4118
  125.4902  191.7647    9.8039
  130.5098  194.2353   10.1961
  135.5294  196.7059   10.5882
  140.5490  199.1765   10.9804
  145.5686  201.6471   11.3725
  150.5882  204.1176   11.7647
  155.6078  206.5882   12.1569
  160.6275  209.0588   12.5490
  165.6471  211.5294   12.9412
  170.6667  214.0000   13.3333
  175.6863  216.4706   13.7255
  180.7059  218.9412   14.1176
  185.7255  221.4118   14.5098
  190.7451  223.8824   14.9020
  195.7647  226.3529   15.2941
  200.7843  228.8235   15.6863
  205.8039  231.2941   16.0784
  210.8235  233.7647   16.4706
  215.8431  236.2353   16.8627
  220.8627  238.7059   17.2549
  225.8824  241.1765   17.6471
  230.9020  243.6471   18.0392
  235.9216  246.1176   18.4314
  240.9412  248.5882   18.8235
  245.9608  251.0588   19.2157
  250.9804  253.5294   19.6078
  256.0000  256.0000   20.0000
  256.0000  253.4902   19.8039
  256.0000  250.9804   19.6078
  256.0000  248.4706   19.4118
  256.0000  245.9608   19.2157
  256.0000  243.4510   19.0196
  256.0000  240.9412   18.8235
  256.0000  238.4314   18.6275
  256.0000  235.9216   18.4314
  256.0000  233.4118   18.2353
  256.0000  230.9020   18.0392
  256.0000  228.3922   17.8431
  256.0000  225.8824   17.6471
  256.0000  223.3725   17.4510
  256.0000  220.8627   17.2549
  256.0000  218.3529   17.0588
  256.0000  215.8431   16.8627
  256.0000  213.3333   16.6667
  256.0000  210.8235   16.4706
  256.0000  208.3137   16.2745
  256.0000  205.8039   16.0784
  256.0000  203.2941   15.8824
  256.0000  200.7843   15.6863
  256.0000  198.2745   15.4902
  256.0000  195.7647   15.2941
  256.0000  193.2549   15.0980
  256.0000  190.7451   14.9020
  256.0000  188.2353   14.7059
  256.0000  185.7255   14.5098
  256.0000  183.2157   14.3137
  256.0000  180.7059   14.1176
  256.0000  178.1961   13.9216
  256.0000  175.6863   13.7255
  256.0000  173.1765   13.5294
  256.0000  170.6667   13.3333
  256.0000  168.1569   13.1373
  256.0000  165.6471   12.9412
  256.0000  163.1373   12.7451
  256.0000  160.6275   12.5490
  256.0000  158.1176   12.3529
  256.0000  155.6078   12.1569
  256.0000  153.0980   11.9608
  256.0000  150.5882   11.7647
  256.0000  148.0784   11.5686
  256.0000  145.5686   11.3725
  256.0000  143.0588   11.1765
  256.0000  140.5490   10.9804
  256.0000  138.0392   10.7843
  256.0000  135.5294   10.5882
  256.0000  133.0196   10.3922
  256.0000  130.5098   10.1961
  256.0000  128.0000   10.0000
  256.0000  125.4902    9.8039
  256.0000  122.9804    9.6078
  256.0000  120.4706    9.4118
  256.0000  117.9608    9.2157
  256.0000  115.4510    9.0196
  256.0000  112.9412    8.8235
  256.0000  110.4314    8.6275
  256.0000  107.9216    8.4314
  256.0000  105.4118    8.2353
  256.0000  102.9020    8.0392
  256.0000  100.3922    7.8431
  256.0000   97.8824    7.6471
  256.0000   95.3725    7.4510
  256.0000   92.8627    7.2549
  256.0000   90.3529    7.0588
  256.0000   87.8431    6.8627
  256.0000   85.3333    6.6667
  256.0000   82.8235    6.4706
  256.0000   80.3137    6.2745
  256.0000   77.8039    6.0784
  256.0000   75.2941    5.8824
  256.0000   72.7843    5.6863
  256.0000   70.2745    5.4902
  256.0000   67.7647    5.2941
  256.0000   65.2549    5.0980
  256.0000   62.7451    4.9020
  256.0000   60.2353    4.7059
  256.0000   57.7255    4.5098
  256.0000   55.2157    4.3137
  256.0000   52.7059    4.1176
  256.0000   50.1961    3.9216
  256.0000   47.6863    3.7255
  256.0000   45.1765    3.5294
  256.0000   42.6667    3.3333
  256.0000   40.1569    3.1373
  256.0000   37.6471    2.9412
  256.0000   35.1373    2.7451
  256.0000   32.6275    2.5490
  249.7647   30.1176    2.3529
  241.4510   27.6078    2.1569
  233.1373   25.0980    1.9608
  224.8235   22.5882    1.7647
  216.5098   20.0784    1.5686
  208.1961   17.5686    1.3725
  199.8824   15.0588    1.1765
  191.5686   12.5490    0.9804
  183.2549   10.0392    0.7843
  174.9412    7.5294    0.5882
  166.6275    5.0196    0.3922
  158.3137    2.5098    0.1961
  150.0000         0         0];
    
%... Interpolate get requested size for color table
pp=1:(m-1)/(size(c,1)-1):m;
r=interp1(pp,c(:,1),1:m);
g=interp1(pp,c(:,2),1:m);
b=interp1(pp,c(:,3),1:m);
%... Normalize to range [0,1], and divide again by maximum value
% to correct for round-off errors associated with the interpolation.
map=[r' g' b']/256;
map = map/max(map(:));

%% LINT - Generate c matrix
% % interpolate to linear spacing (used to generate c matrix above)
% x = [0,0.2,0.4,0.6,0.95,1.0];
% cOrig = ...
% [80    0   80;
%   0    0  220;
%   0  130    0;
% 256  256   20;
% 256   32  2.5; 
% 150    0    0];
% 
% xI = linspace(0,1,256);
% rI = interp1(x,cOrig(:,1),xI)';
% gI = interp1(x,cOrig(:,2),xI)';
% bI = interp1(x,cOrig(:,3),xI)';
% c = [rI,gI,bI]

%% LINT - original .cpt file
% #   bds_highcontrast AKA algae
% #   https://urldefense.proofpoint.com/v2/url?u=http-3A__pydoc.net_Python_yt_3.1_yt.visualization.color-5Fmaps_&d=AwICAg&c=-dg2m7zWuuDZ0MUcV7Sdqw&r=pSbXBPH3UferyZhMLabHraXEETVqVsrZu68QmtCL2Xs&m=C7hGIvYG0g5F2Z0MtFbnlafyevIys-jKMYTeUZwPrlo&s=-cUX24w0QBlA9k8dDNSc8TbrLvHFIcPtyLVF20B9zJk&e= 
% # The format is as follows:
% #   First number is the number at which we are defining a color breakpoint
% #   Second number is the (0..1) number to interpolate to when coming *from below*
% #   Third number is the (0..1) number to interpolate to when coming *from above*
% 
% # Next up is boilerplate -- the name, the colormap dict we just made, and the
% # number of segments we want.  This is probably fine as is.
% 
% cdict = {'red':   ((0.0, 80/256., 80/256.),
%                    (0.2, 0.0, 0.0),
%                    (0.4, 0.0, 0.0),
%                    (0.6, 256/256., 256/256.),
%                    (0.95, 256/256., 256/256.),
%                    (1.0, 150/256., 150/256.)),
%          'green': ((0.0, 0/256., 0/256.),
%                    (0.2, 0/256., 0/256.),
%                    (0.4, 130/256., 130/256.),
%                    (0.6, 256/256., 256/256.),
%                    (1.0, 0.0, 0.0)),
%          'blue':  ((0.0, 80/256., 80/256.),
%                    (0.2, 220/256., 220/256.),
%                    (0.4, 0.0, 0.0),
%                    (0.6, 20/256., 20/256.),
%                    (1.0, 0.0, 0.0))}
% 
% add_cmap('bds_highcontrast', cdict)
% add_cmap('algae', cdict)



